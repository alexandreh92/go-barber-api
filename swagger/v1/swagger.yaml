---
openapi: 3.0.1
info:
  title: GoBarber API V1
  version: v1
  description: This is the documentation for GoBarberAPI
servers:
- url: http://localhost:3000
  description: Development server
- url: ''
  description: Production server (uses live data)
components:
  schemas:
    new_appointment:
      type: object
      properties:
        date:
          type: string
        provider_id:
          type: integer
          example: 1
      required:
      - date
      - provider_id
    update_profile:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
        current_password:
          type: string
        avatar:
          type: string
    user_session:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
      - email
      - password
    user_registration:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
        name:
          type: string
        provider:
          type: boolean
      required:
      - email
      - password
      - password_confirmation
      - name
      - provider
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
paths:
  "/api/appointments":
    get:
      summary: List all appointments
      tags:
      - Appointments
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: string
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
    post:
      summary: Create an appointment
      tags:
      - Appointments
      parameters: []
      security:
      - Bearer: []
      responses:
        '201':
          description: created
        '401':
          description: unauthorized
        '422':
          description: rejected
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_appointment"
  "/api/appointments/{id}":
    delete:
      summary: Delete an appointment
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '403':
          description: forbidden
        '422':
          description: unprocessable entity
  "/api/notifications":
    get:
      summary: List all notifications
      tags:
      - Notifications
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
  "/api/notifications/{id}":
    put:
      summary: Read notification
      tags:
      - Notifications
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
  "/api/profile":
    put:
      summary: Update profile
      tags:
      - Profile
      parameters: []
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/update_profile"
  "/api/providers":
    get:
      summary: List all providers
      tags:
      - Providers
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
  "/api/providers/availables":
    get:
      summary: List all available dates
      tags:
      - Providers
      security:
      - Bearer: []
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
      - name: provider_id
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/registrations":
    post:
      summary: Creates an user
      tags:
      - Registration
      parameters: []
      responses:
        '201':
          description: created
          headers:
            Authorization:
              schema:
                type: string
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_registration"
  "/api/schedule":
    get:
      summary: List all schedule given a day
      tags:
      - Schedule
      security:
      - Bearer: []
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/sessions":
    post:
      summary: Creates a session
      tags:
      - Session
      parameters: []
      responses:
        '201':
          description: created
          headers:
            Authorization:
              schema:
                type: string
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/user_session"
